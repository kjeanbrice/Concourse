{"version":3,"sources":["webpack:///src/assets/js/modifiedcore.js"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,CAAC,E","file":"scripts.js","sourcesContent":["\n/**\n *\n */\n$(document).ready(function() {\n  /** Constant div card */\n  const DIV_CARD = 'div.card';\n\n  /** Initialize tooltips */\n  $('[data-toggle=\"tooltip\"]').tooltip();\n\n  /** Initialize popovers */\n  $('[data-toggle=\"popover\"]').popover({\n    html: true\n  });\n\n  /** Function for remove card */\n  $('[data-toggle=\"card-remove\"]').on('click', function(e) {\n    let $card = $(this).closest(DIV_CARD);\n\n    $card.remove();\n\n    e.preventDefault();\n    return false;\n  });\n\n  /** Function for collapse card */\n  $('[data-toggle=\"card-collapse\"]').on('click', function(e) {\n    let $card = $(this).closest(DIV_CARD);\n\n    $card.toggleClass('card-collapsed');\n\n    e.preventDefault();\n    return false;\n  });\n\n  /** Function for fullscreen card */\n  $('[data-toggle=\"card-fullscreen\"]').on('click', function(e) {\n    let $card = $(this).closest(DIV_CARD);\n\n    $card.toggleClass('card-fullscreen').removeClass('card-collapsed');\n\n    e.preventDefault();\n    return false;\n  });\n\n  /**  */\n  if ($('[data-sparkline]').length) {\n    let generateSparkline = function($elem, data, params) {\n      $elem.sparkline(data, {\n        type: $elem.attr('data-sparkline-type'),\n        height: '100%',\n        barColor: params.color,\n        lineColor: params.color,\n        fillColor: 'transparent',\n        spotColor: params.color,\n        spotRadius: 0,\n        lineWidth: 2,\n        highlightColor: hexToRgba(params.color, .6),\n        highlightLineColor: '#666',\n        defaultPixelsPerValue: 5\n      });\n    };\n\n    require(['sparkline'], function() {\n      $('[data-sparkline]').each(function() {\n        let $chart = $(this);\n\n        generateSparkline($chart, JSON.parse($chart.attr('data-sparkline')), {\n          color: $chart.attr('data-sparkline-color')\n        });\n      });\n    });\n  }\n\n  /**  */\n  if ($('.chart-circle').length) {\n    require(['circle-progress'], function() {\n      $('.chart-circle').each(function() {\n        let $this = $(this);\n\n        $this.circleProgress({\n          fill: {\n            color: tabler.colors[$this.attr('data-color')] || tabler.colors.blue\n          },\n          size: $this.height(),\n          startAngle: -Math.PI / 4 * 2,\n          emptyFill: '#F4F4F4',\n          lineCap: 'round'\n        });\n      });\n    });\n  }\n});"],"sourceRoot":""}